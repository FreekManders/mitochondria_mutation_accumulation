import argparse

parser = argparse.ArgumentParser()
parser = argparse.ArgumentParser(description='Put here a description.')
parser.add_argument('-v','--vcf_dir',type=str, help='Input VCF file', required = True)
parser.add_argument('-o','--output',type=str, help='Output folder', required = True)
args = parser.parse_args()

# Create config file with inputs
with open('run_NF-IAP.config', mode = 'w') as configfile:
    configfile.write('/* Always include process and resources config */')
    configfile.write('\n')
    configfile.write("""includeConfig '/hpc/pmc_vanboxtel/tools/NF-IAP/configs/nextflow.config'""")
    configfile.write('\n')
    configfile.write("""includeConfig '/hpc/pmc_vanboxtel/tools/NF-IAP/configs/process.config'""")
    configfile.write('\n')
    configfile.write("""includeConfig '/hpc/pmc_vanboxtel/tools/NF-IAP/configs/resources.config'""")
    configfile.write('\n')
    configfile.write('\n')
    configfile.write('params {')
    configfile.write('\n')
    configfile.write("""  fastq_path = ''""")
    configfile.write('\n')
    configfile.write("""  bam_path = ''""")
    configfile.write('\n')
    configfile.write("""  vcf_path = '""" + args.vcf_dir + """'""")
    configfile.write('\n')
    configfile.write("""  gvcf_path = ''""")
    configfile.write('\n')
    configfile.write("""  out_dir = '""" + args.output + """'""")
    configfile.write('\n')
    configfile.write("""  genome = 'GRCh38'""")
    configfile.write('\n')
    configfile.write("""  premapQC = false""")
    configfile.write('\n')
    configfile.write("""  postmapQC = false""")
    configfile.write('\n')
    configfile.write("""  germlineCalling = false""")
    configfile.write('\n')
    configfile.write("""  variantFiltration = false""")
    configfile.write('\n')
    configfile.write("""  variantAnnotation = true""")
    configfile.write('\n')
    configfile.write("}")
